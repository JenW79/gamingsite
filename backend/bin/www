#!/usr/bin/env node

// backend/bin/www

require('dotenv').config();

const { port } = require('../config');
const app = require('../app');
const db = require('../db/models');
const http = require("http");
const setupSockets = require("../socket");

const { Umzug, SequelizeStorage } = require('umzug');
const path = require('path');

const server = http.createServer(app);

// Setup Umzug for Sequelize migrations
const runMigrations = async () => {
  const umzug = new Umzug({
     migrations: {
      glob: 'migrations/*.js',                
      cwd: path.join(__dirname, '..'),       
    },
    context: db.sequelize.getQueryInterface(),
    storage: new SequelizeStorage({ sequelize: db.sequelize }),
    logger: console,
  });

  await umzug.up();
};

const ensureMaxHealthColumn = async () => {
  try {
    const [results] = await db.sequelize.query(`
      SELECT column_name
      FROM information_schema.columns
      WHERE table_name = 'Users'
        AND column_name = 'maxHealth'
        AND table_schema = 'public'
    `);

    if (results.length === 0) {
      console.log("🛠 'maxHealth' column missing — creating it manually.");
      await db.sequelize.query(`
        ALTER TABLE "public"."Users"
        ADD COLUMN "maxHealth" INTEGER DEFAULT 100 NOT NULL
      `);
      console.log("✅ 'maxHealth' column added successfully.");
    } else {
      console.log("✔️ 'maxHealth' column already exists.");
    }
  } catch (err) {
    console.error("❌ Failed to check/add 'maxHealth' column manually:", err);
  }
};

const ensureIsReadColumn = async () => {
  try {
    const [results] = await db.sequelize.query(`
      SELECT column_name
      FROM information_schema.columns
      WHERE table_name = 'DirectMessages'
        AND column_name = 'isRead'
        AND table_schema = 'public'
    `);

    if (results.length === 0) {
      console.log("🛠 'isRead' column missing — creating it manually.");
      await db.sequelize.query(`
        ALTER TABLE "public"."DirectMessages"
        ADD COLUMN "isRead" BOOLEAN DEFAULT false NOT NULL
      `);
      console.log("✅ 'isRead' column added successfully.");
    } else {
      console.log("✔️ 'isRead' column already exists.");
    }
  } catch (err) {
    console.error("❌ Failed to check/add 'isRead' column manually:", err);
  }
};

db.sequelize
  .authenticate()
  .then(async () => {
    console.log('🟢 DB connection success! Sequelize is ready to use...');
    await ensureIsReadColumn();
    await ensureMaxHealthColumn();
    await runMigrations();
    console.log('🧩 All migrations applied.');
  })
  .then(() => {
    setupSockets(server);
    server.listen(port, () => console.log(`🚀 Listening on port ${port}...`));
  })
  .catch((err) => {
    console.error('🔥 Failed to connect to DB or run migrations:', err);
    process.exit(1);
  });
